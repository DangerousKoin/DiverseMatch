[{"/home/koin/code/DiverseMatch/src/index.js":"1","/home/koin/code/DiverseMatch/src/serviceWorker.js":"2","/home/koin/code/DiverseMatch/src/pages/App.jsx":"3","/home/koin/code/DiverseMatch/src/utils/userService.js":"4","/home/koin/code/DiverseMatch/src/layouts/Content.jsx":"5","/home/koin/code/DiverseMatch/src/layouts/Sidebar.jsx":"6","/home/koin/code/DiverseMatch/src/components/Forms/LoginForm.jsx":"7","/home/koin/code/DiverseMatch/src/components/Forms/SignupForm.jsx":"8","/home/koin/code/DiverseMatch/src/utils/tokenService.js":"9","/home/koin/code/DiverseMatch/src/components/Forms/AddTopicForm.jsx":"10","/home/koin/code/DiverseMatch/src/components/System/ErrorMessage.jsx":"11","/home/koin/code/DiverseMatch/src/components/Search/TopicSearch.jsx":"12","/home/koin/code/DiverseMatch/src/utils/topicService.js":"13","/home/koin/code/DiverseMatch/src/utils/profileService.js":"14","/home/koin/code/DiverseMatch/src/components/Feeds/TopicFeed.jsx":"15","/home/koin/code/DiverseMatch/src/components/Cards/TopicCard.jsx":"16","/home/koin/code/DiverseMatch/src/components/Displays/UserDisplay.jsx":"17","/home/koin/code/DiverseMatch/src/components/Displays/ProfileDisplay.jsx":"18","/home/koin/code/DiverseMatch/src/components/Feeds/MatchFeed.jsx":"19","/home/koin/code/DiverseMatch/src/components/Cards/MatchCard.jsx":"20"},{"size":589,"mtime":1611966708420,"results":"21","hashOfConfig":"22"},{"size":5086,"mtime":1610383419330,"results":"23","hashOfConfig":"22"},{"size":4043,"mtime":1618979772061,"results":"24","hashOfConfig":"22"},{"size":1465,"mtime":1614462316955,"results":"25","hashOfConfig":"22"},{"size":975,"mtime":1617401137460,"results":"26","hashOfConfig":"22"},{"size":2135,"mtime":1616635840430,"results":"27","hashOfConfig":"22"},{"size":2906,"mtime":1615568160150,"results":"28","hashOfConfig":"22"},{"size":4593,"mtime":1612067836970,"results":"29","hashOfConfig":"22"},{"size":977,"mtime":1610476369590,"results":"30","hashOfConfig":"22"},{"size":3395,"mtime":1616642071150,"results":"31","hashOfConfig":"22"},{"size":132,"mtime":1611861177264,"results":"32","hashOfConfig":"22"},{"size":2046,"mtime":1616640411340,"results":"33","hashOfConfig":"22"},{"size":1156,"mtime":1615499664850,"results":"34","hashOfConfig":"22"},{"size":1608,"mtime":1617401328970,"results":"35","hashOfConfig":"22"},{"size":595,"mtime":1616641774330,"results":"36","hashOfConfig":"22"},{"size":2730,"mtime":1616642532020,"results":"37","hashOfConfig":"22"},{"size":633,"mtime":1615568179790,"results":"38","hashOfConfig":"22"},{"size":1010,"mtime":1616640600250,"results":"39","hashOfConfig":"22"},{"size":506,"mtime":1618980324971,"results":"40","hashOfConfig":"22"},{"size":887,"mtime":1617401141540,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ankxxq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/home/koin/code/DiverseMatch/src/index.js",[],["90","91"],"/home/koin/code/DiverseMatch/src/serviceWorker.js",[],"/home/koin/code/DiverseMatch/src/pages/App.jsx",["92","93","94","95"],"/home/koin/code/DiverseMatch/src/utils/userService.js",["96"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate username\n    throw new Error('Username already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json()\n    throw new Error('User does not exist') // This is the error in our try catch(err)\n  })\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile\n};","/home/koin/code/DiverseMatch/src/layouts/Content.jsx",[],"/home/koin/code/DiverseMatch/src/layouts/Sidebar.jsx",[],"/home/koin/code/DiverseMatch/src/components/Forms/LoginForm.jsx",["97"],"import React, { useState } from 'react';\nimport ErrorMessage from '../System/ErrorMessage'\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Modal } from 'semantic-ui-react'\n\nexport default function LoginForm(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ] = useState('');\n    const [state, setState] = useState({\n        username: '',\n        password: '',\n    });\n\n    const [open, setOpen] = React.useState(true)\n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    };\n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n        <Modal\n          basic\n          closeIcon\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          trigger={\"\"}\n        >\n\n\n\n<Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='teal' textAlign='center'>\n            <Image src='https://photocollector.s3-us-west-2.amazonaws.com/site-images/DiverseMatch_logo.png' /> Log-in to your account\n            </Header>\n            <Form  autoComplete=\"off\"  onSubmit={handleSubmit}>\n               <Segment stacked>\n                  <Form.Input                    \n                    name=\"username\"\n                    placeholder=\"username\"\n                    value={state.username}\n                    onChange={handleChange}\n                    requiredss\n                  />\n                  <Form.Input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={ state.password}\n                    onChange={handleChange}\n                    required\n                  />\n                <Button\n                  color='teal'\n                  fluid size='large'\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to='/signup'>Sign Up</Link>\n            </Message>\n            {error ? <ErrorMessage error={error} /> : null}\n            </Grid.Column>\n          </Grid>\n\n\n\n        </Modal>\n          \n        </>\n      );\n}\n\n","/home/koin/code/DiverseMatch/src/components/Forms/SignupForm.jsx",["98"],"import React, { useState } from 'react';\nimport ErrorMessage from '../System/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment, Modal } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function SignupForm(props){\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError ] = useState('');\n  const [open, setOpen] = React.useState(true);\n  const [selectedFile, setSelectedFile] = useState('');\n  const [state, setState]  = useState({\n    username: '',\n    password: '',\n    passwordConf: ''\n  });\n  \n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n      email: state.username + '@diversematch.com'\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n\n\n    // generating rest of form data by looping over the state object!\n    for (let key in state){\n      formData.append(key, state[key])\n    }\n    //fyi if you log out formData you won't see anything you have to use the folllowing\n\n    // Display the key/value pairs\n    // for (var pair of formData.entries()) {\n    //   console.log(pair[0]+ ', ' + pair[1]); \n    // }\n\n    // SO now we have are data prepared to send over in our formData object\n    try {\n      // refere to the utils/userService, to look at the signup fetch function\n      await userService.signup(formData);\n      // setTheUser in our app\n      props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n      // with the correct user object from the current token\n      // then route to the homepage\n      history.push('/') // defined above from react-router-dom\n      // after this we can go whereever\n\n    } catch(err){\n      console.log(err.message)\n      setError(err.message)\n    }\n\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n    \n    return (\n        <>\n        <Modal\n          basic\n          closeIcon\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          trigger={\"\"}\n        >\n<Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' color='teal' textAlign='center'>\n                <Image src='https://photocollector.s3-us-west-2.amazonaws.com/site-images/DiverseMatch_logo.png' /> Sign Up    \n              </Header>            \n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n                <Segment stacked>               \n                    <Form.Input                    \n                      name=\"username\"\n                      placeholder=\"username\"\n                      value={state.username}\n                      onChange={handleChange}\n                      required\n                    />\n                    \n                    <Form.Input             \n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={ state.password}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input     \n                      name=\"passwordConf\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={ state.passwordConf}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Field> \n                      <Form.Input\n                        type=\"file\"\n                        name=\"photo\"\n                        placeholder=\"upload image\"\n                        onChange={handleFileInput}\n                      />      \n                    </Form.Field>\n                    \n                    <Button\n                      type=\"submit\"\n                      className=\"btn\"\n                      disabled={invalidForm}\n                    >\n                    Signup\n                  </Button>\n                  </Segment>\n                  {error ? <ErrorMessage error={error} /> : null}\n                </Form>\n            </Grid.Column>\n          </Grid>\n\n\n\n\n        </Modal>\n        \n        </>\n      );   \n    \n}","/home/koin/code/DiverseMatch/src/utils/tokenService.js",["99"],"function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/home/koin/code/DiverseMatch/src/components/Forms/AddTopicForm.jsx",["100","101"],"import React, { useState, useEffect } from 'react';\r\nimport TopicFeed from '../Feeds/TopicFeed';\r\nimport * as topicsAPI from '../../utils/topicService';\r\n\r\nimport { Button, Form, Segment, Grid } from 'semantic-ui-react'\r\n\r\nexport default function AddTopicForm({handleAddTopic, user}){\r\n  const [selectedFile, setSelectedFile] = useState('')\r\n  const [topics, setTopics] = useState([]);\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    description: ''\r\n  })\r\n\r\n  function handleChange(e){\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('photo', selectedFile)\r\n    formData.append('description', state.description)\r\n    formData.append('title', state.title)\r\n    handleAddTopic(formData)\r\n    // Have to submit the form now! We need a function!\r\n  }\r\n\r\n  async function handleAddTopic(topic){\r\n    const data = await topicsAPI.create(topic);\r\n    setTopics([data.topic,  ...topics])\r\n    setState({\r\n      title: '',\r\n      description: ''\r\n    })\r\n    \r\n    \r\n  };\r\n\r\n  function handleFileInput(e){\r\n    setSelectedFile(e.target.files[0])\r\n  }\r\n\r\n  async function deleteTopic(topicId) {\r\n    try {\r\n        const data = await topicsAPI.removeTopic(topicId);\r\n        getTopics();\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n  async function getTopics(){\r\n    try {\r\n      const data = await topicsAPI.getUserTopics();\r\n      setTopics([...data.topics])\r\n    } catch(err){\r\n      console.log(err, ' this is the error')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTopics();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n  \r\n        <Segment id='elementCont'>\r\n        \r\n            <Form  autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n            <Form.Input\r\n                  className=\"form-control\"\r\n                  name=\"title\"\r\n                  value={state.title}\r\n                  placeholder=\"topic title\"\r\n                  onChange={handleChange}\r\n                  required\r\n              />\r\n              <Form.Input\r\n                  className=\"form-control\"\r\n                  name=\"description\"\r\n                  value={state.description}\r\n                  placeholder=\"topic description\"\r\n                  onChange={handleChange}\r\n                  required\r\n              />\r\n        <Grid>\r\n          <Grid.Row style={{ textAlign: 'left' }}>\r\n            <Grid.Column style={{ width: '65%', paddingRight: 0 }}>   \r\n              <Form.Input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                placeholder=\"upload image\"\r\n                onChange={handleFileInput}\r\n              />\r\n              </Grid.Column>\r\n            <Grid.Column >   \r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n              >\r\n                CREATE TOPIC\r\n              </Button>\r\n              </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n            </Form>\r\n            </Segment>\r\n            <br />\r\n            \r\n            <Grid>\r\n              <Grid.Column style={{ width: '90%', margin: '10px auto' }}>\r\n                <TopicFeed topics={topics} numPhotosCol={1} user={user} location={\"form\"} deleteTopic={deleteTopic} />\r\n              </Grid.Column>\r\n            </Grid> \r\n    </>\r\n  ); \r\n}","/home/koin/code/DiverseMatch/src/components/System/ErrorMessage.jsx",[],"/home/koin/code/DiverseMatch/src/components/Search/TopicSearch.jsx",["102"],"import React, { useState } from 'react';\r\nimport { Button, Form, Grid } from 'semantic-ui-react';\r\nimport TopicFeed from '../Feeds/TopicFeed';\r\nimport * as topicsAPI from '../../utils/topicService';\r\n\r\n\r\n\r\n\r\nexport default function Search({addInterest, addDislike}){\r\n  const [state, setState] = useState({});\r\n  const [topics, setTopics] = useState([]);\r\n\r\n  function handleChange(e){\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault()\r\n    try {\r\n      if (state.title == \"\" || state.title == null) {getTopics()} else {\r\n        const data = await topicsAPI.search(state.title);\r\n        const formData = new FormData();\r\n        formData.append('title', state.title);\r\n        setTopics([...data.topics]);\r\n      }\r\n      \r\n    } catch(err){\r\n      console.log(err, ' this is the error');\r\n    }\r\n  }\r\n\r\n  async function getTopics(){\r\n    try {\r\n      const data = await topicsAPI.getAllTopics();\r\n      setTopics([...data.topics]);\r\n    } catch(err){\r\n      console.log(err, ' this is the error');\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  return (\r\n  <>\r\n      <Form  autoComplete=\"off\" onSubmit={handleSubmit} style={{ marginBottom: '1rem' }}>\r\n\r\n        <Grid>\r\n          <Grid.Row style={{ textAlign: 'left' }}>\r\n            <Grid.Column style={{ width: '60%', paddingRight: 0 }}>\r\n              <Form.Input\r\n                  className=\"search-input\"\r\n                  name=\"title\"\r\n                  placeholder=\"Search Topics\"\r\n                  onChange={handleChange}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column >\r\n              <Button type=\"submit\" className=\"btn\">\r\n              Search\r\n              </Button>\r\n\r\n          </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        </Form>\r\n\r\n      <Grid>\r\n        <Grid.Column >\r\n        <TopicFeed topics={topics} location={\"search\"} numPhotosCol={1} addInterest={addInterest} addDislike={addDislike} />\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n  </>\r\n  \r\n  );\r\n}","/home/koin/code/DiverseMatch/src/utils/topicService.js",[],"/home/koin/code/DiverseMatch/src/utils/profileService.js",[],"/home/koin/code/DiverseMatch/src/components/Feeds/TopicFeed.jsx",[],"/home/koin/code/DiverseMatch/src/components/Cards/TopicCard.jsx",[],"/home/koin/code/DiverseMatch/src/components/Displays/UserDisplay.jsx",[],"/home/koin/code/DiverseMatch/src/components/Displays/ProfileDisplay.jsx",[],"/home/koin/code/DiverseMatch/src/components/Feeds/MatchFeed.jsx",[],"/home/koin/code/DiverseMatch/src/components/Cards/MatchCard.jsx",["103"],"import React from 'react';\nimport '../../styles/MatchCard.css';\nimport { Card, Image, Button, Grid } from 'semantic-ui-react'\n\n\nfunction MatchCard({match}) {\n  return (\n    <>\n    <Grid>\n      <Grid.Row style={{ textAlign: 'left' }}>\n        <Grid.Column style={{ width: '16rem', padding: '0', margin: '0 0 0 1rem' }}>\n          <Card id='matchCard' key={match._id}>\n            <Card.Content id='topicContent'>\n                <Image\n                    id='matchImg'\n                    floated='left'\n                    size='tiny'\n                    src={match.icon ? match.icon : 'https://react.semantic-ui.com/images/wireframe/square-image.png'}\n                />\n            <strong>{match.username}</strong>\n            <br />\n            \n            </Card.Content>\n          </Card>\n        </Grid.Column >\n    </Grid.Row>\n  </Grid>\n  </>\n\n  );\n}\n\nexport default MatchCard;",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":75,"column":17,"nodeType":"110","messageId":"111","endLine":75,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":84,"column":17,"nodeType":"110","messageId":"111","endLine":84,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":93,"column":17,"nodeType":"110","messageId":"111","endLine":93,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":102,"column":17,"nodeType":"110","messageId":"111","endLine":102,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":56,"column":1,"nodeType":"114","endLine":62,"endColumn":3},{"ruleId":"108","severity":1,"message":"115","line":8,"column":25,"nodeType":"110","messageId":"111","endLine":8,"endColumn":37},{"ruleId":"108","severity":1,"message":"115","line":9,"column":23,"nodeType":"110","messageId":"111","endLine":9,"endColumn":35},{"ruleId":"112","severity":1,"message":"113","line":34,"column":3,"nodeType":"114","endLine":39,"endColumn":5},{"ruleId":"116","severity":1,"message":"117","line":32,"column":18,"nodeType":"110","messageId":"118","endLine":32,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":49,"column":15,"nodeType":"110","messageId":"111","endLine":49,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":23,"column":23,"nodeType":"121","messageId":"122","endLine":23,"endColumn":25},{"ruleId":"108","severity":1,"message":"123","line":3,"column":23,"nodeType":"110","messageId":"111","endLine":3,"endColumn":29},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setValidForm' is assigned a value but never used.","no-redeclare","'handleAddTopic' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]